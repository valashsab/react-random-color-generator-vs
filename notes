Design and develop a random color generator web application using React. This application will show a random color when a button is clicked:

- [ ] A button with the exact text `Generate` will cause a new color to be generated when it is clicked

1. Button "Generate"

- [ ] Once a color is generated, update the background color of a div which contains the exact text `Generated Color: <background color hex code>` (the background color and the hex code must match)

2. useState: bg-c of div with specific text changes to bg-c

Our suggestions for breaking down the task into TODOs:

- If you need a reminder of how we did this last week, watch the video showing breaking down tasks
- Read the [Breaking Down Tasks Into TODOs](https://learn.upleveled.io/courses/bootcamp-pern/modules/tasks/#breaking-down-tasks-into-todos) page on the Learning Platform
- This time, you will need to think about design in the browser: Design the web app with a tool like [Figma](https://www.figma.com/) or by sketching the design out on paper
- Come up with a detailed list of features you'll need for the application above
- For each of the features, write which dependencies, functions and React component(s) you'll need for them, if any
- Describe how each component will interact with the other components
- Identify any unknowns

## Stretch Goals

- Ask for a hue
- Ask for a lightness
- Transition smoothly between the colors as they change
- Use a CSS-in-JS library for all styling (eg. Emotion or Styled Components)
- Ask for a size for the color box and generate a box of that size
- Make a "screensaver mode" where the color box moves around in a diagonal pattern, bouncing off the screen edges and changing color (eg. like [this](https://user-images.githubusercontent.com/1935696/93082456-42d27100-f691-11ea-872a-7cb7c0df6b9a.gif))

## Acceptance Criteria

- [ ] Preflight runs through without errors in your project
  - [ ] Link in your GitHub repo's About section: Netlify deployed website
- [ ] Project has been [imported into CodeSandbox](https://learn.upleveled.io/courses/bootcamp-pern/modules/cheatsheet-tasks/#codesandbox) and a comment has been added below with the sandbox URL
- [ ] [Drone bot](https://learn.upleveled.io/courses/bootcamp-pern/modules/cheatsheet-tasks/#upleveled-drone) has been tagged and responded with a passing message
- [ ] Correct GitHub commit message format (see [Writing Commit Messages](https://learn.upleveled.io/courses/bootcamp-pern/modules/cheatsheet-git-github/#writing-commit-messages))
