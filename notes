Design and develop a random color generator web application using React. This application will show a random color when a button is clicked:

- [x] A button with the exact text `Generate` will cause a new color to be generated when it is clicked

- [x] Once a color is generated, update the background color of a div which contains the exact text `Generated Color: <background color hex code>` (the background color and the hex code must match)

Our suggestions for breaking down the task into TODOs:

- If you need a reminder of how we did this last week, watch the video showing breaking down tasks
- Read the [Breaking Down Tasks Into TODOs](https://learn.upleveled.io/courses/bootcamp-pern/modules/tasks/#breaking-down-tasks-into-todos) page on the Learning Platform
- This time, you will need to think about design in the browser: Design the web app with a tool like [Figma](https://www.figma.com/) or by sketching the design out on paper
- Come up with a detailed list of features you'll need for the application above
- For each of the features, write which dependencies, functions and React component(s) you'll need for them, if any
- Describe how each component will interact with the other components
- Identify any unknowns

## Stretch Goals

- Ask for a hue
- Ask for a lightness/luminosity
- Transition smoothly between the colors as they change
- Use a CSS-in-JS library for all styling (eg. Emotion or Styled Components)
- Ask for a size for the color box and generate a box of that size
- Make a "screensaver mode" where the color box moves around in a diagonal pattern, bouncing off the screen edges and changing color (eg. like [this](https://user-images.githubusercontent.com/1935696/93082456-42d27100-f691-11ea-872a-7cb7c0df6b9a.gif))

## Acceptance Criteria

- [x] Preflight runs through without errors in your project
  - [x] Link in your GitHub repo's About section: Netlify deployed website
- [x] Project has been [imported into CodeSandbox](https://learn.upleveled.io/courses/bootcamp-pern/modules/cheatsheet-tasks/#codesandbox) and a comment has been added below with the sandbox URL
- [x] [Drone bot](https://learn.upleveled.io/courses/bootcamp-pern/modules/cheatsheet-tasks/#upleveled-drone) has been tagged and responded with a passing message
- [x] Correct GitHub commit message format (see [Writing Commit Messages](https://learn.upleveled.io/courses/bootcamp-pern/modules/cheatsheet-git-github/#writing-commit-messages))

---

info: node.js random-color-generator

import { argv } from 'node:process';
import chalk from 'chalk';
import randomColor from 'randomcolor';

const color = randomColor({ hue: argv[2], luminosity: argv[3] });

console.log(
chalk.hex(color).bold(`###############################
###############################
###############################

#####

##### ${color}

#####

###############################
###############################
###############################`),
);

<!--
FILE:
.eslintrc.cjs:

/** @type {import('@typescript-eslint/utils').TSESLint.Linter.Config} */
const config = {
  extends: ['upleveled'],
};

module.exports = config; -->

<!-- FILE:
.eslintignore:

# Changed from /build to /dist because this is default for

# Netlify when deploying an app using `@upleveled/react-scripts`

# Ref: https://github.com/upleveled/create-react-app/commit/ab165a178994751e837d2835b2a4dbcc48f6f709

#

# TODO: Remove `dist` and this block altogether when we have

# moved the full curriculum from create-react-app to Next.js

dist

# Next.js build folder

.next -->

<!-- FILE
stylelint.config.mjs:
/\*_ @type {import('stylelint').Config} _/
const config = {
extends: ['stylelint-config-upleveled'],
};

export default config; -->
